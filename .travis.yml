language: c

matrix:
  include:
  - compiler: clang
    env:
      - BUILD_METHOD=cmake
      - UBUNTU_CC_PACKAGE=clang-8
      - UPDATE_CC_ALTER="sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 0"
  - compiler: gcc
    env:
      - BUILD_METHOD=cmake
      - UBUNTU_CC_PACKAGE="gcc-8 g++-8"
      - UPDATE_CC_ALTER="sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 0"
      - UPDATE_CXX_ALTER="sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 0"
  - compiler: clang
    env:
      - BUILD_METHOD=bmake
      - UBUNTU_CC_PACKAGE=clang-8
      - UPDATE_CC_ALTER="sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-8 0"
  - compiler: gcc
    env:
      - BUILD_METHOD=bmake
      - UBUNTU_CC_PACKAGE="gcc-8 g++-8"
      - UPDATE_CC_ALTER="sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 0"
      - UPDATE_CXX_ALTER="sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-8 0"

dist: bionic

git:
  depth: 1

before_install:
    - sudo dpkg --add-architecture i386
    - sudo apt-get update
    - sudo apt-get upgrade -y
    - sudo apt-get install ${BUILD_METHOD} ${UBUNTU_CC_PACKAGE} lib32gcc-8-dev libncurses5-dev:i386
    - test -z ${UPDATE_CC_ALTER} || sh -c "${UPDATE_CC_ALTER}"
    - test -z ${UPDATE_CXX_ALTER} || sh -c "${UPDATE_CXX_ALTER}"

script:
    - cp sample/dreambbs.conf dreambbs.conf;
    - if [ "$BUILD_METHOD" = "cmake" ]; then
        mkdir build;
        cd build;
        cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..;
        make all test install;
      fi
    - if [ "$BUILD_METHOD" = "bmake" ]; then
        bmake configure;
        bmake CC="$CC" all runtest install clean;
      fi
    - ldd ${HOME}/bin/bbsd
